AWSTemplateFormatVersion: '2010-09-09'
Description: Auto Scaling Group for EC2 instances in private subnets

Parameters:
  Environment:
    Type: String
    Description: Environment name
    Default: base

  VpcId:
    Type: String
    Description: VPC ID
    Default: ''

  PrivateSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of Private Subnet IDs

  InstanceType:
    Type: String
    Description: EC2 instance type
    Default: t3.micro

  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Description: AMI ID from SSM Parameter Store
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

  PrivateALBTargetGroupArn:
    Type: String
    Description: ARN of the private ALB target group

  PrivateALBSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group ID of the private ALB

Resources:
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EC2 instances
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref PrivateALBSecurityGroupId
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-ec2-sg

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref EC2Role

  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Path: /

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref ImageId
        InstanceType: !Ref InstanceType
        SecurityGroupIds:
          - !Ref EC2SecurityGroup
        IamInstanceProfile:
          Name: !Ref EC2InstanceProfile
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y
            yum install -y httpd
            systemctl start httpd
            systemctl enable httpd
            echo "<h1>Hello from ${Environment} environment!</h1>" > /var/www/html/index.html
            echo "OK" > /var/www/html/health
      LaunchTemplateName: !Sub ${Environment}-launch-template
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: Name
              Value: !Sub ${Environment}-launch-template

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub ${Environment}-asg
      VPCZoneIdentifier: !Ref PrivateSubnets
      TargetGroupARNs:
        - !Ref PrivateALBTargetGroupArn
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: {{minSize}}
      MaxSize: {{maxSize}}
      DesiredCapacity: {{desiredCapacity}}
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-ec2-instance
          PropagateAtLaunch: true

  ScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: {{cpuTargetValue}}

Outputs:
  AutoScalingGroupName:
    Description: Name of the Auto Scaling Group
    Value: !Ref AutoScalingGroup
    Export:
      Name: !Sub ${Environment}-ASGName

  EC2SecurityGroupId:
    Description: Security Group ID for the EC2 instances
    Value: !Ref EC2SecurityGroup
    Export:
      Name: !Sub ${Environment}-EC2SecurityGroupId
